---
layout:     post
title:      "C++ Primer - 笔记"
subtitle:   "C++ Primer Summary "
date:       2019-06-18 20:00:00
author:     "Becks"
header-img: "img/post-bg2.jpg"
catalog:    true
tags:
    - Batch
    - 学习笔记
---

Internal or external command are buildin to cmd.exe command. Batch let you run program within the shell. cmd.exe inside C:/Windows/System32 <br/>
如果直接双击 batch script without pause, it 可能闪退 without letting you see the output


**mkdir dir1**: make directory named as dir1 <br/>
**cd ..** : jump back to the parent directory <br/>
**rmdir dir1** : remove directory named dir1, 如果directory不是empty, 显示error: The directory is not empty. <br/>
**rmdir /S** : removes everything inside the folder 包括folder, used to remove a directory tree. <br/>
**rmdir /S /Q** : Quiet Mode, 功能与rmdir /S一样，但是不会问是不是要remove directory tree. <br/>
**del dir1** : delete everything inside the folder，但是不会delete folder，需要再call rmdir dir1 去remove the folder <br/>
**move** : move [Y : /-Y] [path1]filename1 [path2]filename2 , 如果path1等于path2, 那么move 也等于rename,    /-Y flag: 不让prompt confirm 当overwrite file的时候, /-Y prompt会confirm是不是要overwrite file <br/>
**copy** copy source destination : destination可以只是path，不用说具体名字，那么copy时候会保持文件/文件夹 名字一致 <br/>
**delete** : /P 删除前prompt 会确认是否删除。 /s Delet from all subdirectories . /Q Quite mode 删除时候不会问 <br/>
**type** Displays the contents of a text file or fiels 像linux 的cat 
**exit /b** 与goto :eof 功能一样 退出程序

## Variable and Basic Types

**Object**: an object is a region of memory that has a type. In the book, we will freely use the term *object* regardless of whether the object has built-in or class type, named or unnamed (命名的还是未命名的), or can be read or written.

<span style="background-color: #FFFF00">**Initialization is not assignment**</span>. Initialization happens when a variable is given a value *when it is created*.(创建变量时 赋予它一个初始值). Assignment obliterates an object's current value and replaces that value with a new one (把对象当前值擦除，用一个新值代替)

List Initialization 

下面四种初始化都正确

```c++

int units_sold = 0;
int units_sold = {0};
int units_sold {0};
int units_sold(0);

```

when used with variables of built-in type, List Initialization has one important property: The compiler will not let us initialize variables of built-in type if the initializer might lead to the loss of information. (编译器将会报错，如果使用列表初始化且初始值存在丢失信息的风险). 

```c++
long double id = 3.1415026536;
int a{ld}, b = {ld}; //error: 存在丢失信息风险
int c(ld), d = ld;

```


## Data Type, varibles

Integer: 1 0 -1 -30 9000 <br/>
Character:  a  b c d e <br/>
String:  "Hey! My name is" (sometimes, we use 双引号，有时候不用双引号) <br/> 



```shell
set varname=Howdy   #把varname 等于 Howdy

%varname% #显示'Howdy' is not recognized as a internal or external command

set varname="Howdy" #加quotation mark
echo %varname% #显示'"Howdy"'
#even though it is string, it still interpret quotation mark which we don't want that

```

![](/img/post/linux/userdel.png)






